// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE
'use strict';

var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Js_mapperRt = require("bs-platform/lib/js/js_mapperRt.js");

var jsMapperConstantArray = /* array */[
  /* tuple */[
    -692038429,
    "private"
  ],
  /* tuple */[
    -546774204,
    "aws-exec-read"
  ],
  /* tuple */[
    -316946235,
    "bucket-owner-full-control"
  ],
  /* tuple */[
    -211467360,
    "public-read-write"
  ],
  /* tuple */[
    426625855,
    "bucket-owner-read"
  ],
  /* tuple */[
    580715711,
    "public-read"
  ],
  /* tuple */[
    766530949,
    "authenticated-read"
  ]
];

function aclToJs(param) {
  return Js_mapperRt.binarySearch(7, param, jsMapperConstantArray);
}

function aclFromJs(param) {
  return Js_mapperRt.revSearch(7, jsMapperConstantArray, param);
}

function putObjectRequestToJs(param) {
  return {
          ACL: param[/* _ACL */0],
          Body: param[/* _Body */1],
          Bucket: param[/* _Bucket */2],
          ContentType: param[/* _ContentType */3],
          Key: param[/* _Key */4]
        };
}

function putObjectRequestFromJs(param) {
  return /* record */[
          /* _ACL */param.ACL,
          /* _Body */param.Body,
          /* _Bucket */param.Bucket,
          /* _ContentType */param.ContentType,
          /* _Key */param.Key
        ];
}

function uploadOptions(accessControlPolicy, body, bucket, contentType, key, _) {
  var tmp = { };
  var tmp$1 = Belt_Option.map(accessControlPolicy, aclToJs);
  if (tmp$1) {
    tmp.ACL = tmp$1[0];
  }
  if (body) {
    tmp.Body = body[0];
  }
  if (bucket) {
    tmp.Bucket = bucket[0];
  }
  if (contentType) {
    tmp.ContentType = contentType[0];
  }
  if (key) {
    tmp.Key = key[0];
  }
  return tmp;
}

var SendData = /* module */[];

var ManagedUpload = /* module */[/* SendData */SendData];

exports.aclToJs = aclToJs;
exports.aclFromJs = aclFromJs;
exports.putObjectRequestToJs = putObjectRequestToJs;
exports.putObjectRequestFromJs = putObjectRequestFromJs;
exports.uploadOptions = uploadOptions;
exports.ManagedUpload = ManagedUpload;
/* No side effect */
